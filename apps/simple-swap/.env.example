# Twitter API Configuration
TWITTER_SCRAPER_ENABLED=true
# Apify Token for Web Harvester Twitter scraper
APIFY_TOKEN=your_apify_token

# Twitter API v2 Credentials (for sending replies)
TWITTER_API_KEY=your_api_key
TWITTER_API_SECRET=your_api_secret
TWITTER_ACCESS_TOKEN=your_access_token
TWITTER_ACCESS_SECRET=your_access_secret
TWITTER_REPLIES_ENABLED=true

# Browserless.io Configuration (fallback for rate-limited Twitter API)
# Both BaaS v2 and BrowserQL use the same token
BROWSERLESS_TOKEN=your_browserless_token

# BaaS v2 - Standard browser automation (may be detected by Twitter)
BROWSERLESS_ENABLED=false

# BrowserQL - Stealth-first automation (recommended for Twitter)
# GraphQL-based API with advanced bot detection bypassing
# Access editor at: https://account.browserless.io/bql
# Uses the same BROWSERLESS_TOKEN as BaaS v2
# NOTE: BrowserQL requires a specific browserless plan/subscription
# If you get HTTP 500 errors, your account may not have BrowserQL access
BROWSERQL_ENABLED=false

# Playwright - Direct browser automation via browserless.io
# Uses Playwright-core with browserless.io websocket connection
# More reliable than BaaS v2, simpler than BrowserQL
# Uses the same BROWSERLESS_TOKEN as BaaS v2
PLAYWRIGHT_ENABLED=false

# Twitter credentials for browserless/BrowserQL login
X_USERNAME=your_x_username_or_email
X_PASSWORD=your_x_password

# BNS Configuration
BNS_USE_MOCK=true
STACKS_API_URL=https://stacks-node-api.mainnet.stacks.co

